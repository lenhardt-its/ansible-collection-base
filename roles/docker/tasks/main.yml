---
- name: "Gather operating system variables"
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution_file_variety | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags: docker

- name: "Install on Debian"
  ansible.builtin.include_tasks: install-debian.yml
  when: ansible_os_family == "Debian"
  tags: docker

- name: "Install on RedHat"
  ansible.builtin.include_tasks: install-redhat.yml
  when: ansible_os_family == "RedHat"
  tags: docker

- name: "Install on Suse"
  ansible.builtin.include_tasks: install-suse.yml
  when: ansible_os_family == "Suse"
  tags: docker

- name: Configure /etc/docker/daemon.json
  ansible.builtin.copy:
    content: "{{ docker_config | to_nice_json(indent=2, sort_keys=False) }}\n"
    dest: "/etc/docker/daemon.json"
    owner: root
    group: root
    mode: "0644"
  notify: Restart docker
  when: docker_config is defined
  tags: docker

- name: Start and enable service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  tags: docker

- name: Ensure docker users are added to the docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
  when: docker_users | length > 0
  tags: docker
